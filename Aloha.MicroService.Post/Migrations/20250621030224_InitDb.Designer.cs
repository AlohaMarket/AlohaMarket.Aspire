// <auto-generated />
using System;
using System.Text.Json;
using Aloha.MicroService.Post.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Aloha.MicroService.Post.Migrations
{
    [DbContext(typeof(PostDbContext))]
    [Migration("20250621030224_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("PostServiceDB")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Aloha.MicroService.Post.Infrastructure.Entity.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<JsonDocument>("Attributes")
                        .HasColumnType("jsonb");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("CategoryPath")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("CategoryValidationMessage")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DistrictCode")
                        .HasColumnType("integer");

                    b.Property<string>("DistrictText")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsCategoryValid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocationValid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUserPlanValid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsViolation")
                        .HasColumnType("boolean");

                    b.Property<string>("LocationValidationMessage")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("ProvinceCode")
                        .HasColumnType("integer");

                    b.Property<string>("ProvinceText")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PushedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserPlanId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserPlanValidationMessage")
                        .HasColumnType("text");

                    b.Property<int>("WardCode")
                        .HasColumnType("integer");

                    b.Property<string>("WardText")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Posts", "PostServiceDB");
                });

            modelBuilder.Entity("Aloha.MicroService.Post.Infrastructure.Entity.PostImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("PostImages", "PostServiceDB");
                });

            modelBuilder.Entity("Aloha.MicroService.Post.Infrastructure.Entity.PostImage", b =>
                {
                    b.HasOne("Aloha.MicroService.Post.Infrastructure.Entity.Post", null)
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aloha.MicroService.Post.Infrastructure.Entity.Post", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
